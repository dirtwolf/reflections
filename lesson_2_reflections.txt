What happens when you initialize a repository? Why do you need to do it?

  Initializing creates the git dot files. You have to initialize before you can start committing.

How is the staging area different from the working directory and the repository? What value do you think it offers?

  The staging area shows which files will be changed in the next commit. It's useful to help decide which files to
  include in each commit.

How can you use the staging area to make sure you have one commit per logical change?

  You can use diff to compare the working directory with the staging area and diff --staged to compare the staging
  area with the repository.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

  Branches are useful when making experimental changes that you don't want in your master repository at the time.

How do the diagrams help you visualize the branch structure?

  They show you which branches are unreachable.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

  Merging branches contains one branch with the commits of both. We represent the branch that way to show which 
  commits are reachable by each branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

  Pros:
    many files can be merged without issue so automatic merging makes things easier in that case
  Cons:
    The automatic merging isn't all that smart.